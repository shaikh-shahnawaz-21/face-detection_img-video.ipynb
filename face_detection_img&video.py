# -*- coding: utf-8 -*-
"""face detection_img&video.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dJ6DLI5_7txzNL50uoeCXv46ba2Sfxkl
"""

!pip install opencv-python
!pip install opencv-python-headless

import cv2
import matplotlib.pyplot as plt

# Download Haar cascade file
!wget https://raw.githubusercontent.com/opencv/opencv/master/data/haarcascades/haarcascade_frontalface_default.xml

from google.colab import files
uploaded = files.upload()

import cv2
from google.colab.patches import cv2_imshow  # ðŸ‘ˆ important for Colab

# Load face cascade
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

# Load image
img = cv2.imread('/content/WhatsApp Image 2025-06-15 at 8.16.46 PM.jpeg')  # ðŸ‘ˆ replace with your image path
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

# Detect faces
# Detect only larger faces
faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=3, minSize=(100, 100))


# Draw rectangles
for (x, y, w, h) in faces:
    cv2.rectangle(img, (x, y), (x+w, y+h), (0, 255, 0), 2)

# Show image (Colab-safe)
cv2_imshow(img)

from google.colab import files
uploaded = files.upload()

import os
video_path = list(uploaded.keys())[0]
print("Video uploaded:", video_path)

import cv2
from google.colab.patches import cv2_imshow

# Load face detector
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

# Load video
cap = cv2.VideoCapture('/content/WhatsApp Video 2025-06-15 at 8.16.46 PM.mp4')  # replace with your video filename

frame_count = 0
max_frames = 30  # Show only first 30 frames to avoid overload

while True:
    ret, frame = cap.read()
    if not ret or frame_count >= max_frames:
        break

    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # Detect faces
    faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=6, minSize=(60, 60))

    # Draw rectangles
    for (x, y, w, h) in faces:
        padding = 20
        x_pad = max(x - padding, 0)
        y_pad = max(y - padding, 0)
        w_pad = w + 2 * padding
        h_pad = h + 2 * padding
        cv2.rectangle(frame, (x_pad, y_pad), (x_pad + w_pad, y_pad + h_pad), (0, 255, 0), 2)

    # Show frame in Colab
    cv2_imshow(frame)
    frame_count += 1

cap.release()

